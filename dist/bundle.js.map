{"version":3,"sources":["webpack://front/webpack/bootstrap","webpack://front/webpack/runtime/global","webpack://front/webpack/runtime/publicPath","webpack://front/./src/js/classes/dom-manipulator.js","webpack://front/./src/image/arrow.png","webpack://front/./src/image/atmospheric.png","webpack://front/./src/image/humidity.png","webpack://front/./src/image/rain.png","webpack://front/./src/image/visibility.png","webpack://front/./src/js/main.js","webpack://front/./src/js/classes/weather.api.js","webpack://front/./src/js/classes/http.service.js","webpack://front/./src/js/environment.js","webpack://front/./src/js/classes/weather-html-component.js","webpack://front/./src/js/classes/select-html-component.js"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","DOMManipulator","selector","container","found","querySelectorAll","weatherApi","url","path","fetch","options","super","units","localStorage","getItem","getForCityName","getCoords","async","pos","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","long","coords","longitude","lat","latitude","getForCurrentPosition","get","city","weatherComponent","shortWeatherContainer","visualWeatherContainer","extendedWeatherContainer","find","data","temperature","Math","round","main","temp","temperatureFeels","feels_like","weatherDescription","weather","description","weatherMain","celsiusСharacter","imageSrc","icon","innerHTML","shortWeatherHtmlContent","date","Date","setSeconds","getSeconds","timezone","dateString","toLocaleString","hour","minute","month","day","timeZone","windDeg","wind","deg","rain","rainHtmlContent","visibilityKm","visibility","toFixed","extendedWeatherHtmlContent","name","sys","country","arrow","speed","atmospheric","pressure","humidity","selectComponent","selectItems","selectContainer","selectInput","selectListContainer","render","selectListItems","map","join","event","selectedItem","target","textContent","remove","toggle","classList","init","then","res","json","addEventListener","closest","setup","removeItem","position","setItem"],"mappings":"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","file":"bundle.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export default class DOMManipulator {\r\n    find(selector, container = document) {\r\n        let found = container.querySelectorAll(selector);\r\n        return found.length === 1 ? found[0] : found;\r\n    }\r\n}","export default __webpack_public_path__ + \"ad9cc1297ccf6ceb63769eaca8b5a0c7.png\";","export default __webpack_public_path__ + \"3ec68c4008cc4135d273e50802b788fb.png\";","export default __webpack_public_path__ + \"a22ddf6ec4c259d4a74b0351a093fa0c.png\";","export default __webpack_public_path__ + \"15ca937c459e00717910724f03730f44.png\";","export default __webpack_public_path__ + \"b52700c315e3a13eaad9c5427a8c2665.png\";","import \"../styles/styles.scss\"\r\nimport WeatherHtmlComponent from './classes/weather-html-component'\r\nimport SelectHtmlComponent from './classes/select-html-component'\r\nimport WeatherApi from \"./classes/weather.api\"\r\n\r\nconst weatherApi = new WeatherApi({\r\n    units: \"units=metric\"\r\n})\r\n\r\nconst weatherComponent = new WeatherHtmlComponent({\r\n    shortWeatherContainer: \".short-weather-content\",\r\n    visualWeatherContainer: \".weather-visual\",\r\n    extendedWeatherContainer: \".extended-weather-content\",\r\n});\r\n\r\nconst selectComponent = new SelectHtmlComponent({\r\n    container: \".select\",\r\n    selectItems: ['Kiev','Moscow','London','Paris','Tokyo','New York','Madrid','Сurrent location']\r\n});\r\n\r\nmain();\r\n\r\nfunction main() {\r\n\r\n    weatherApi.init().then(res => res.json())                                \r\n    .then(data => weatherComponent.render(data));\r\n\r\n    selectComponent.selectContainer.addEventListener('click', (event) => {\r\n        if(event.target.closest('.select__input')) {\r\n            selectComponent.toggle();\r\n        }\r\n    \r\n        if(event.target.closest('.select-list__item')) {\r\n            let selectedItem = event.target.innerHTML;\r\n            selectComponent.setup(event);\r\n\r\n            if(selectedItem === \"Сurrent location\") {\r\n                localStorage.removeItem('location')\r\n                navigator.geolocation.getCurrentPosition((position) => {\r\n                    let {latitude,longitude} = position.coords;\r\n                    weatherApi.getForCurrentPosition(latitude,longitude)\r\n                            .then(res => res.json())\r\n                                .then(data => weatherComponent.render(data));\r\n                });\r\n            } else {\r\n                localStorage.setItem('location', `${selectedItem}`)\r\n                weatherApi.getForCityName(selectedItem)\r\n                        .then(res => res.json())                                \r\n                            .then(data => weatherComponent.render(data));\r\n            }\r\n        }\r\n    })\r\n};","import Http from './http.service'\r\n\r\nexport default class WeatherApi extends Http{\r\n    \r\n    constructor(options) {\r\n        super();\r\n        this.units = options.units;\r\n    }\r\n\r\n    #_apiKey = 'appid=c2d7b0dc545a1691d056e13f6ec432f3';\r\n\r\n    async init() {\r\n        let location = localStorage.getItem('location');\r\n        if(location) {\r\n            return this.getForCityName(location)\r\n        } else {\r\n            const getCoords = async () => {\r\n                const pos = await new Promise((resolve, reject) => {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n                });\r\n            \r\n                return {\r\n                    long: pos.coords.longitude,\r\n                    lat: pos.coords.latitude,\r\n                };\r\n            };\r\n        \r\n            let {lat,long} = await getCoords();\r\n            return this.getForCurrentPosition(lat,long)\r\n        }\r\n    }\r\n    \r\n    getForCurrentPosition(latitude,longitude) {\r\n        return this.get(`?lat=${latitude}&lon=${longitude}&${this.units}&${this.#_apiKey}`);\r\n    }\r\n\r\n    getForCityName(city) {\r\n        return this.get(`?q=${city}&${this.units}&${this.#_apiKey}`);\r\n    }\r\n};","import env from '../environment'\r\n\r\nexport default class Http {\r\n\r\n    constructor() {\r\n        this.url = env.url;\r\n    }\r\n\r\n    get(path) {\r\n        return fetch(`${this.url}${path}`);\r\n    }\r\n    \r\n}\r\n","export default {\r\n    url: 'http://api.openweathermap.org/data/2.5/weather'\r\n} ","import DOMManipulator from '../classes/dom-manipulator'\r\n\r\nimport arrowIcon from '../../image/arrow.png'\r\nimport atmosphericIcon from '../../image/atmospheric.png'\r\nimport humidityIcon from '../../image/humidity.png'\r\nimport rainIcon from '../../image/rain.png'\r\nimport visibilityIcon from '../../image/visibility.png'\r\n\r\nexport default class WeatherHtmlComponent extends DOMManipulator{\r\n\r\n    constructor({shortWeatherContainer,visualWeatherContainer,extendedWeatherContainer}) {\r\n        super();\r\n        this.shortWeatherContainer = this.find(shortWeatherContainer);\r\n        this.visualWeatherContainer = this.find(visualWeatherContainer);\r\n        this.extendedWeatherContainer = this.find(extendedWeatherContainer);\r\n    }\r\n\r\n    render(data) {\r\n        this.data = data;\r\n\r\n        this.temperature = Math.round(this.data.main.temp);\r\n        this.temperatureFeels = Math.round(this.data.main.feels_like);\r\n        this.weatherDescription = this.data.weather[0].description;\r\n        this.weatherMain = this.data.weather[0].main;\r\n        this.celsiusСharacter = '&#8451';\r\n        this.imageSrc = `http://openweathermap.org/img/wn/${this.data.weather[0].icon}@2x.png`\r\n        this.visualWeatherContainer.innerHTML = `\r\n            <img src=\"${this.imageSrc}\">\r\n        `\r\n        this.#_createShortWeatherContent();\r\n        this.#_createExtendedWeatherContent();\r\n\r\n    }\r\n\r\n    #_createShortWeatherContent() {\r\n        let shortWeatherHtmlContent = `\r\n            <p><b>${this.temperature}</b>${this.celsiusСharacter}</p>\r\n            <p>${this.weatherDescription}</p>\r\n        `\r\n        this.shortWeatherContainer.innerHTML = shortWeatherHtmlContent;\r\n    }\r\n\r\n    #_createExtendedWeatherContent() {\r\n        let date = new Date();\r\n        date.setSeconds(date.getSeconds() + this.data.timezone)\r\n        let dateString = date.toLocaleString('en', {hour: 'numeric', minute:'2-digit',month: 'long', day: '2-digit', timeZone: 'UTC'});\r\n        let windDeg = this.data.wind.deg;\r\n        let rain = this.data.rain;\r\n        let rainHtmlContent = '';\r\n\r\n        if(rain) {\r\n            rainHtmlContent = `\r\n            <div class=\"visual\">\r\n                <img src=\"${rainIcon}\">\r\n            </div>\r\n            <span>${rain['1h']}mm</span>\r\n            `\r\n        };\r\n        let visibilityKm = this.data.visibility / 1000;\r\n        visibilityKm = visibilityKm.toFixed(1);\r\n\r\n        let extendedWeatherHtmlContent = `\r\n            <div class=\"date\">${dateString}</div>\r\n            <div class=\"city\">${this.data.name}, ${this.data.sys.country}</div>\r\n            <div class=\"temperature\">\r\n                <img src=\"${this.imageSrc}\" width=\"70\" height=\"70\">\r\n                <span><b>${this.temperature}</b>${this.celsiusСharacter}</span>\r\n            </div>\r\n            <div class=\"weather\">\r\n                <span>Feels like ${this.temperatureFeels}${this.celsiusСharacter}</span>\r\n                <span>${this.weatherMain}. ${this.weatherDescription}</span>\r\n            </div>\r\n            <div class=\"weather-add-info\">\r\n                <div class=\"weather-add-info__item _wind\">\r\n                    <div class=\"visual\">\r\n                        <img style=\"transform: rotate(${windDeg}deg)\"src=\"${arrowIcon}\">\r\n                    </div>\r\n                    <span>${this.data.wind.speed} m/s</span>\r\n                </div>\r\n                <div class=\"weather-add-info__item _pressure\">\r\n                    <div class=\"visual\">\r\n                        <img src=\"${atmosphericIcon}\">\r\n                    </div>\r\n                    <span>${this.data.main.pressure}hPa</span>\r\n                </div>\r\n                <div class=\"weather-add-info__item _humidity\">\r\n                    <div class=\"visual\">\r\n                        <img src=\"${humidityIcon}\">\r\n                    </div>\r\n                    <span>Humidity: ${this.data.main.humidity}%</span>\r\n                </div>\r\n                <div class=\"weather-add-info__item _rain\">\r\n                    ${rainHtmlContent}\r\n                </div>\r\n                <div class=\"weather-add-info__item _visibility\">\r\n                    <div class=\"visual\">\r\n                        <img src=\"${visibilityIcon}\">\r\n                    </div>\r\n                    <span>Visibility: ${visibilityKm}km</span>\r\n                </div>\r\n            </div>\r\n        `;\r\n    \r\n        this.extendedWeatherContainer.innerHTML = extendedWeatherHtmlContent;\r\n    }\r\n}\r\n","import DOMManipulator from \"./dom-manipulator\"\r\n\r\nexport default class SelectHtmlComponent extends DOMManipulator{\r\n\r\n    constructor({container, selectItems}) {\r\n        super();\r\n        this.selectContainer = this.find(container);\r\n        this.selectInput = this.find('.select__input')\r\n        this.selectListContainer = this.find('.select-list')\r\n        this.selectItems = selectItems;\r\n        this.render()\r\n    }\r\n\r\n    render() {\r\n        let selectListItems = this.selectItems.map((e) => `<li class=\"select-list__item\">${e}</li>`).join('')\r\n        this.selectListContainer.innerHTML = selectListItems;\r\n    }\r\n\r\n    setup(event) {\r\n        let selectedItem = event.target.innerHTML;\r\n        \r\n        if(this.selectInput.textContent === 'Select location') {\r\n            event.target.remove();\r\n        } else {\r\n            event.target.innerHTML = this.selectInput.innerHTML;\r\n        }\r\n        this.selectInput.innerHTML = selectedItem;\r\n        this.toggle();\r\n    }\r\n\r\n    toggle() {\r\n        this.selectContainer.classList.toggle('open');\r\n    }\r\n}\r\n"],"sourceRoot":""}